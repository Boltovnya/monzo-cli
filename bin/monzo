#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'monzo'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/monzo` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/monzo now"
  exit 64
end

include GLI::App

program_desc 'CLI client for your monzo'

version Monzo::VERSION

subcommand_option_handling :normal
arguments :strict

# desc 'Describe some switch here'
# switch [:s,:switch]
#
# desc 'Describe some flag here'
# default_value 'the default'
# arg_name 'The name of the argument'
# flag [:f,:flagname]

desc 'List all of your accounts'
arg_name 'No args required'
command :accounts do |c|
  # c.desc 'Describe a switch to accounts'
  # c.switch :s

  # c.desc 'Describe a flag to accounts'
  # c.default_value 'default'
  # c.flag :f
  c.action do |global_options,options,args|

    # Your command logic here

    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "accounts command ran"
  end
end

desc 'States your account balance'
# arg_name 'Describe arguments to balance here'
command :balance do |c|
  c.action do |global_options,options,args|
    puts "balance command ran"
  end
end

desc 'List your transactions'
arg_name 'Maybe pagination'
command :transactions do |c|
  c.action do |global_options,options,args|
    puts "transactions command ran"
  end
end

desc 'Authenticate here'
arg_name 'Describe arguments to authenticate here'
command :authenticate do |c|
  c.action do |global_options,options,args|
    puts "authenticate command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
